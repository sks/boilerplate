name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GOFLAGS: -mod=readonly
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.19
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          version: latest
      - name: Calculate Docker image tags
        id: tags
        env:
          DOCKER_IMAGES: "sabithksme/services"
        run: |
          case $GITHUB_REF in
            refs/tags/*)  VERSION=${GITHUB_REF#refs/tags/};;
            refs/heads/*) VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g');;
            refs/pull/*)  VERSION=pr-${{ github.event.number }};;
            *)            VERSION=sha-${GITHUB_SHA::8};;
          esac
          TAGS=()
          for image in $DOCKER_IMAGES; do
            TAGS+=("${image}:${VERSION}")
            if [[ "${{ github.event.repository.default_branch }}" == "$VERSION" ]]; then
              TAGS+=("${image}:latest")
            fi
          done
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::$(IFS=,; echo "${TAGS[*]}")
          echo ::set-output name=commit_hash::${GITHUB_SHA::8}
          echo ::set-output name=build_date::$(git show -s --format=%cI)
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: github.event_name == 'push'
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le
          push: ${{ github.event_name == 'push' }}
          file: ./cmd/mf-importjson/Dockerfile
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |
            GIT_TAG=${{ steps.tags.outputs.version }}
            COMMIT_HASH=${{ steps.tags.outputs.commit_hash }}
            BUILD_DATE=${{ steps.tags.outputs.build_date }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.tags.outputs.version }}
            org.opencontainers.image.created=${{ steps.tags.outputs.build_date }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}